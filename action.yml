name: "Create the default Container Tags for the GlueOps Platform"
author: "@GlueOps"
description: "The GlueOps Platform orchestrates CI/CD using container tags.  This action produces the tags used by the platform"
branding:
  icon: 'tag'
  color: 'yellow'



outputs:
  tags_csv:
    description: 'Comma-separated list of GlueOps image tags'
    value: ${{ steps.create-tags.outputs.tags }}
  clean_target_ref:
    description: 'Target reference with invalid tag characters removed'
    value: ${{ steps.create-tags.outputs.target-ref}}
  target_ref_type:
    description: 'Type of Target ref, as ["branch", "pull_request", "tag", "unknown"]'
    value: ${{ steps.create-tags.outputs.target-ref-type }}

runs:
  using: "composite"
  steps:
    - name: Create Tags
      id: create-tags
      shell: bash
      run: |
        echo "::group::determine ref"
        if [[ $GITHUB_REF == refs/heads/* ]]; then
          REF_TYPE=branch
          TARGET_REF=${GITHUB_REF#refs/heads/}
        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          REF_TYPE=tag
          TARGET_REF=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          REF_TYPE=pull_request
          TARGET_REF=$GITHUB_SHA
        else
          REF_TYPE=unknown
        fi
        echo "target-ref-type=$TARGET_REF" >> $GITHUB_OUTPUT

        echo "::endgroup::"
        # Create default tags
        SHA="${{ github.sha }}"
        SHORT_SHA="${SHA:0:7}"

        # Remove invalid tag characters from TARGET_REF
        TARGET_REF="${TARGET_REF#refs/tags/}" 
        TARGET_REF="${TARGET_REF#refs/heads/}"
        TARGET_REF=${TARGET_REF////-}      # Replace slashes with hyphens
        TARGET_REF=${TARGET_REF//[^a-zA-Z0-9_.-]/_}   # Replace invalid characters with underscores
        TARGET_REF=${TARGET_REF// /_}      # Replace whitespaces with underscores
        TARGET_REF=${TARGET_REF,,}         # Convert to lowercase
        echo "target-ref=$TARGET_REF" >> $GITHUB_OUTPUT


        # Array of tags to generate
        TAGS_ARRAY=(
          "${TARGET_REF}"
          "${SHORT_SHA}"
          "${SHA}"
        )
        
        IFS=','
        TAGS=${TAGS_ARRAY[*]}
        echo "Computed tags: $TAGS"
        echo "tags=$TAGS" >> $GITHUB_OUTPUT
